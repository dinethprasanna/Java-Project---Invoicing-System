/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces.UserInf;

import Interfaces.AdministratorInf.*;
import Invoice.Invoice;
import Invoice.InvoiceController;
import Invoice.InvoiceItemController;
import Product.Product;
import Product.ProductController;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Namal Prdeep
 */
public class InvoiceGeneratesStep02User extends javax.swing.JFrame {

    /**
     * Creates new form ManageCustomers
     */
    public InvoiceGeneratesStep02User() throws ClassNotFoundException,SQLException {
        initComponents();
        setResizable(false);
        productViewForInvoiceTable();
        
    }
    
    public InvoiceGeneratesStep02User(String selectedCustomerID, String selectedCustomerName) throws ClassNotFoundException,SQLException {
        initComponents();
        setResizable(false);
        productViewForInvoiceTable();

        String customerID=selectedCustomerID;
        String customerName=selectedCustomerName;
        
        selectedCustomerIDLabel.setText(customerID);
        selectedCustomerNameLabel.setText(customerName);
        //auto generate new Invoice ID
        String newInvoiceID=InvoiceController.nextInvoiceID();
        invoiceIDLabel.setText(newInvoiceID);
        

    }

    
    //setting products table data to jtable
    public void productViewForInvoiceTable() throws ClassNotFoundException,SQLException{
        
        Connection con=DBConnection.DBConnector.getConnection();
        Statement stmt=con.createStatement();
        String sql="SELECT product_id AS ID,product_name AS Name,product_description AS Description,purchase_price AS Purchased_Prices,selling_price AS Selling_prices,quantity AS QTY FROM product";
        ResultSet rs=stmt.executeQuery(sql);
        productForInvoiceTable.setModel(DbUtils.resultSetToTableModel(rs));
    }
    
    //setting invoice Items table data to jtable
    public void invoiceItemTable(String invID) throws ClassNotFoundException,SQLException{
        
        Connection con=DBConnection.DBConnector.getConnection();
        Statement stmt=con.createStatement();
        String sql="SELECT  * FROM invoice_item WHERE invoice_no='"+invID+"'";
        ResultSet rs=stmt.executeQuery(sql);
        currentInvoiceAddingItemsTable.setModel(DbUtils.resultSetToTableModel(rs));
    }

    
    //set product data to labels once user select item from the jtable
    public void setProductItem(){
    
        int r=productForInvoiceTable.getSelectedRow();
        
        String proID=productForInvoiceTable.getValueAt(r,0).toString();
        String proName=productForInvoiceTable.getValueAt(r,1).toString();
        String proQuantity=productForInvoiceTable.getValueAt(r,5).toString();
        String proPrice=productForInvoiceTable.getValueAt(r,4).toString();
        
        productNameLable.setText(proName);
        productAvailableQtyLable.setText(proQuantity);
        productIDLable.setText(proID);
        ItmPerPriceLable.setText(proPrice);
    }
    
    //serach product from jtable
    public void searchItemsForInvoice() throws ClassNotFoundException,SQLException{
    
        String srch=productSearchforInvoiceBox.getText();
        ResultSet rs=ProductController.searchProduct(srch);
        productForInvoiceTable.setModel(DbUtils.resultSetToTableModel(rs));
    }
    
    //fields clear method
    public void clearFields(){
    
        productSearchforInvoiceBox.setText("");
        productNameLable.setText("");
        productAvailableQtyLable.setText("");
        enterProductQtyBox.setText("");
        enterProductDiscountBox.setText("");
        productIDLable.setText("");
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productForInvoiceTable = new javax.swing.JTable();
        productSearchforInvoiceBox = new javax.swing.JTextField();
        productIDLable = new javax.swing.JLabel();
        invoiceIDLabel = new javax.swing.JLabel();
        productAvailableQtyLable = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        productNameLable = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        enterProductQtyBox = new javax.swing.JTextField();
        enterProductDiscountBox = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        addingProductToInvoiceButton1 = new javax.swing.JButton();
        selectedCustomerNameLabel = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        selectedCustomerIDLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ItmPerPriceLable = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        currentInvoiceAddingItemsTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        addingProductToInvoiceButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        invoiceCurrentTotalDiscountLable = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        invoiceCurrentTotalAmountLable = new javax.swing.JLabel();
        invoiceCancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 650));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(255, 102, 102));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Invoice Generation");
        jPanel6.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 480, 53));

        jPanel1.setBackground(new java.awt.Color(255, 255, 0));
        jPanel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.setName(""); // NOI18N
        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        productForInvoiceTable.setBackground(new java.awt.Color(153, 255, 153));
        productForInvoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        productForInvoiceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                productForInvoiceTableMouseReleased(evt);
            }
        });
        productForInvoiceTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productForInvoiceTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(productForInvoiceTable);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 540, 240));

        productSearchforInvoiceBox.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        productSearchforInvoiceBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productSearchforInvoiceBoxActionPerformed(evt);
            }
        });
        productSearchforInvoiceBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productSearchforInvoiceBoxKeyReleased(evt);
            }
        });
        jPanel4.add(productSearchforInvoiceBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 400, 30));

        productIDLable.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel4.add(productIDLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 390, 150, 30));

        invoiceIDLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel4.add(invoiceIDLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 380, 30));

        productAvailableQtyLable.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel4.add(productAvailableQtyLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 450, 310, 30));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Enter the Quantity :");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 200, 30));

        productNameLable.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel4.add(productNameLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 420, 310, 30));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText("Enter Discount per Item :");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 200, 30));

        enterProductQtyBox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        enterProductQtyBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterProductQtyBoxActionPerformed(evt);
            }
        });
        jPanel4.add(enterProductQtyBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 490, 280, 30));

        enterProductDiscountBox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel4.add(enterProductDiscountBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 530, 280, 30));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Search Product");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, 30));

        addingProductToInvoiceButton1.setBackground(new java.awt.Color(51, 255, 0));
        addingProductToInvoiceButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addingProductToInvoiceButton1.setForeground(new java.awt.Color(255, 255, 255));
        addingProductToInvoiceButton1.setText("Add Product");
        addingProductToInvoiceButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addingProductToInvoiceButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(addingProductToInvoiceButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 570, 180, 40));

        selectedCustomerNameLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel4.add(selectedCustomerNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 340, 30));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setText("Product Name");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 150, 30));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Selected customer ID ");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, 30));

        selectedCustomerIDLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel4.add(selectedCustomerIDLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 340, 30));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setText("Customer Name ");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 30));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel13.setText("Invoice ID");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, 30));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Available Quantity");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, -1, 30));

        ItmPerPriceLable.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel4.add(ItmPerPriceLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 390, 150, 30));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel15.setText("Product ID");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, -1, 30));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel16.setText("Product ID");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, -1, 30));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel17.setText("Per Item Price");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, -1, 30));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 560, 620));

        jPanel3.setBackground(new java.awt.Color(255, 204, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        currentInvoiceAddingItemsTable.setBackground(new java.awt.Color(51, 255, 204));
        currentInvoiceAddingItemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(currentInvoiceAddingItemsTable);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 490, 430));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Invoice Added Items");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 470, -1));

        addingProductToInvoiceButton.setBackground(new java.awt.Color(51, 255, 0));
        addingProductToInvoiceButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addingProductToInvoiceButton.setForeground(new java.awt.Color(255, 255, 255));
        addingProductToInvoiceButton.setText("Create Invoice");
        addingProductToInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addingProductToInvoiceButtonActionPerformed(evt);
            }
        });
        jPanel3.add(addingProductToInvoiceButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 560, 250, 40));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setText("Total Discount");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 150, 30));

        invoiceCurrentTotalDiscountLable.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel3.add(invoiceCurrentTotalDiscountLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 510, 320, 30));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setText("Total Amount ");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, 150, 30));

        invoiceCurrentTotalAmountLable.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel3.add(invoiceCurrentTotalAmountLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 480, 320, 30));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, 510, 620));

        jPanel6.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 1100, 640));

        invoiceCancelButton.setBackground(new java.awt.Color(255, 255, 255));
        invoiceCancelButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        invoiceCancelButton.setForeground(new java.awt.Color(255, 0, 0));
        invoiceCancelButton.setText("Cancel");
        invoiceCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceCancelButtonActionPerformed(evt);
            }
        });
        jPanel6.add(invoiceCancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 10, 90, 30));

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 710));

        setSize(new java.awt.Dimension(1133, 745));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addingProductToInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addingProductToInvoiceButtonActionPerformed
        
        try {
            Invoice inv2=new Invoice();
            
            inv2.setCustomerID(selectedCustomerIDLabel.getText());
            inv2.setInvoiceNumber(invoiceIDLabel.getText());
            inv2.setInvoiceTotalAmount(Double.parseDouble(invoiceCurrentTotalAmountLable.getText()));
            inv2.setInvoiceTotalDiscount(Double.parseDouble(invoiceCurrentTotalDiscountLable.getText()));
            
            int i = InvoiceController.addInvoice(inv2);
            if(i!=0){
                JOptionPane.showMessageDialog(null,"Invoice Created!");
                UserPanel user1=new UserPanel();
                user1.setVisible(true);
                this.dispose();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InvoiceGeneratesStep02User.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(InvoiceGeneratesStep02User.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addingProductToInvoiceButtonActionPerformed

    private void productSearchforInvoiceBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productSearchforInvoiceBoxKeyReleased
        try {
            searchItemsForInvoice();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InvoiceGeneratesStep02User.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(InvoiceGeneratesStep02User.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_productSearchforInvoiceBoxKeyReleased

    private void productSearchforInvoiceBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productSearchforInvoiceBoxActionPerformed

    }//GEN-LAST:event_productSearchforInvoiceBoxActionPerformed

    private void productForInvoiceTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productForInvoiceTableKeyReleased
        setProductItem();
    }//GEN-LAST:event_productForInvoiceTableKeyReleased

    private void productForInvoiceTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productForInvoiceTableMouseReleased
        setProductItem();
    }//GEN-LAST:event_productForInvoiceTableMouseReleased

    private void enterProductQtyBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterProductQtyBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterProductQtyBoxActionPerformed

    private void addingProductToInvoiceButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addingProductToInvoiceButton1ActionPerformed
        

            if(enterProductQtyBox.getText().equals("") || enterProductDiscountBox.getText().equals("")){
                JOptionPane.showMessageDialog(null,"Please Enter values for Required Fields");
            } else {
                
                try {
                    Product p1=new Product();
                    //get Quantity and Discount from Text fields
                    int productQuantity=Integer.parseInt(enterProductQtyBox.getText());
                    double productDiscount=Double.parseDouble(enterProductDiscountBox.getText());
                    String productID=productIDLable.getText();
                    p1.setProductID(productID);
                    p1.setQuantity(productQuantity);
                    String invoiceID=invoiceIDLabel.getText();
                    //check the Quantity is available
                    boolean productQuantityAvailability=ProductController.checkProductQuantityAvailability(p1);
                    if(productQuantityAvailability==false){
                        JOptionPane.showMessageDialog(null,"This Quantity is Currently Not Available");
                        
                    }else{
                    
                        double perItemPrice=Double.parseDouble(ItmPerPriceLable.getText());
                        double itemTotal=InvoiceItemController.itemTotalPriceCalculation(perItemPrice, productDiscount, productQuantity);

                        Invoice inv1=new Invoice();

                        inv1.setInvoiceNumber(invoiceID);
                        inv1.setProductID(productID);
                        inv1.setUnitPerPrice(perItemPrice);
                        inv1.setItemQuantity(productQuantity);
                        inv1.setPerItemDiscount(productDiscount);
                        inv1.setPerItemTotal(itemTotal);


                        int i = 0;
                        try {
                            i = InvoiceItemController.addItemToInvoice(inv1);
                        } catch (ClassNotFoundException | SQLException ex) {
                            Logger.getLogger(InvoiceGeneratesStep02User.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        if(i!=0){
                            JOptionPane.showMessageDialog(null,"Product Added to Invoice");
                            ProductController.updateProductStock(p1);
                            productViewForInvoiceTable();
                            invoiceItemTable(invoiceID);
                            double currentInvoiceTotalAmount=InvoiceItemController.getCurrentTotalAmountOfInvoice(invoiceID);
                            double currentInvoiceTotalDiscount=InvoiceItemController.getCurrentTotalDiscountOfInvoice(invoiceID);
                            invoiceCurrentTotalAmountLable.setText(Double.toString(currentInvoiceTotalAmount));
                            invoiceCurrentTotalDiscountLable.setText(Double.toString(currentInvoiceTotalDiscount));
                            clearFields();
                        }
                    
                    }
                    
                    
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(InvoiceGeneratesStep02User.class.getName()).log(Level.SEVERE, null, ex);
                }catch(NumberFormatException ex){
                    JOptionPane.showMessageDialog(null,"Please Enter Correct Values");
                }
            }
            
        
    }//GEN-LAST:event_addingProductToInvoiceButton1ActionPerformed

    private void invoiceCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceCancelButtonActionPerformed
        
        UserPanel user1=new UserPanel();
        user1.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_invoiceCancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvoiceGeneratesStep02User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvoiceGeneratesStep02User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvoiceGeneratesStep02User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvoiceGeneratesStep02User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new InvoiceGeneratesStep02User().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(InvoiceGeneratesStep02User.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(InvoiceGeneratesStep02User.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ItmPerPriceLable;
    private javax.swing.JButton addingProductToInvoiceButton;
    private javax.swing.JButton addingProductToInvoiceButton1;
    private javax.swing.JTable currentInvoiceAddingItemsTable;
    private javax.swing.JTextField enterProductDiscountBox;
    private javax.swing.JTextField enterProductQtyBox;
    private javax.swing.JButton invoiceCancelButton;
    private javax.swing.JLabel invoiceCurrentTotalAmountLable;
    private javax.swing.JLabel invoiceCurrentTotalDiscountLable;
    private javax.swing.JLabel invoiceIDLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel productAvailableQtyLable;
    private javax.swing.JTable productForInvoiceTable;
    private javax.swing.JLabel productIDLable;
    private javax.swing.JLabel productNameLable;
    private javax.swing.JTextField productSearchforInvoiceBox;
    private javax.swing.JLabel selectedCustomerIDLabel;
    private javax.swing.JLabel selectedCustomerNameLabel;
    // End of variables declaration//GEN-END:variables
}
